name: Windows
on: 
  push:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.github/workflows/macos.yml'
  pull_request:
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.github/workflows/macos.yml'
jobs:
  build:
    name: Build
    runs-on: windows-latest
    strategy:
      matrix:
        qt_ver: [5.15.1]
        qt_target: [desktop]
        qt_arch: [win64_msvc2019_64, win32_msvc2019]
        include:
          - qt_arch: win64_msvc2019_64
            msvc_arch: x64
            qt_arch_install: msvc2019_64
          - qt_arch: win32_msvc2019
            msvc_arch: x86
            qt_arch_install: msvc2019
    env:
      targetName: q5Go
    steps:
      - name: Install Qt
        uses: jurplel/install-qt-action@v2
        with:
          # Version of Qt to install
          version: ${{ matrix.qt_ver }}
          # Target platform for build
          target: ${{ matrix.qt_target }}
          # Architecture for Windows/Android
          arch: ${{ matrix.qt_arch }}
          
      - uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
          submodules: true
          
      - name: build-msvc
        shell: cmd
        env:
          vc_arch: ${{ matrix.msvc_arch }}
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" %vc_arch%
          mkdir build
          cd build
          qmake -r CONFIG+=release CONFIG+=qtquickcompiler ..\src\q5go.pro DEFINES+=GITHUB_CI_BUILD
          nmake
          dir
          dir release
          cd ..
      - name: package
        env:
          VCINSTALLDIR: 'C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC'
          archiveName: ${{ env.targetName }}-${{ matrix.qt_arch }}
        shell: pwsh
        run: |
          dir
          New-Item -ItemType Directory output
          New-Item -ItemType Directory output\${env:archiveName}
          dir
          Copy-Item build\Release\${env:targetName}'.exe' output\${env:archiveName}\
          windeployqt --qmldir . output\${env:archiveName}\${env:targetName}'.exe'

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: ${{ env.targetName }}-${{ matrix.qt_arch }}
          path: output
